//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("UserModel", "FK_badges_user_id", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.user), "badges", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.badge), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_challenge_initial_values_challenge_id", "challenges", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.challenge), "challenge_initial_values", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.challenge_initial_values), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_challenge_initial_values_user_id", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.user), "challenge_initial_values", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.challenge_initial_values), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_contest_id_group_contests", "contests", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.contest), "group_contests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.group_contests), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_contests_creator_id", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.user), "contests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.contest), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_group_id_group_contests", "groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.group), "group_contests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.group_contests), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_group_id_group_hashtags", "groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.group), "group_hashtags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.group_hashtags), true)]
[assembly: EdmRelationshipAttribute("UserModel", "fk_group_id", "groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.group), "group_members", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.group_members), true)]
[assembly: EdmRelationshipAttribute("UserModel", "fk_user_id_groups", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.user), "group_members", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.group_members), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_group_id_messages", "groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.group), "messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.message), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_poster_id_messages", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.user), "messages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.message), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK__profile__state__0CBAE877", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.user), "profile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.profile), true)]
[assembly: EdmRelationshipAttribute("UserModel", "fk_team_id", "teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.team), "team_members", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.team_members), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_team_members_team_id", "teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.team), "team_members", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.team_members), true)]
[assembly: EdmRelationshipAttribute("UserModel", "fk_team_members_user_id", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.user), "team_members", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.team_members), true)]
[assembly: EdmRelationshipAttribute("UserModel", "fk_user_id_teams", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.user), "team_members", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.team_members), true)]
[assembly: EdmRelationshipAttribute("UserModel", "FK_statistics_users", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ActivEarth.Server.Service.user), "user_statistics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ActivEarth.Server.Service.user_statistics), true)]

#endregion

namespace ActivEarth.Server.Service
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UserEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UserEntities object using the connection string found in the 'UserEntities' section of the application configuration file.
        /// </summary>
        public UserEntities() : base("name=UserEntities", "UserEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UserEntities object.
        /// </summary>
        public UserEntities(string connectionString) : base(connectionString, "UserEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UserEntities object.
        /// </summary>
        public UserEntities(EntityConnection connection) : base(connection, "UserEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<badge_level_info> badge_level_info
        {
            get
            {
                if ((_badge_level_info == null))
                {
                    _badge_level_info = base.CreateObjectSet<badge_level_info>("badge_level_info");
                }
                return _badge_level_info;
            }
        }
        private ObjectSet<badge_level_info> _badge_level_info;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<badge> badges
        {
            get
            {
                if ((_badges == null))
                {
                    _badges = base.CreateObjectSet<badge>("badges");
                }
                return _badges;
            }
        }
        private ObjectSet<badge> _badges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<challenge_definitions> challenge_definitions
        {
            get
            {
                if ((_challenge_definitions == null))
                {
                    _challenge_definitions = base.CreateObjectSet<challenge_definitions>("challenge_definitions");
                }
                return _challenge_definitions;
            }
        }
        private ObjectSet<challenge_definitions> _challenge_definitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<challenge_initial_values> challenge_initial_values
        {
            get
            {
                if ((_challenge_initial_values == null))
                {
                    _challenge_initial_values = base.CreateObjectSet<challenge_initial_values>("challenge_initial_values");
                }
                return _challenge_initial_values;
            }
        }
        private ObjectSet<challenge_initial_values> _challenge_initial_values;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<challenge> challenges
        {
            get
            {
                if ((_challenges == null))
                {
                    _challenges = base.CreateObjectSet<challenge>("challenges");
                }
                return _challenges;
            }
        }
        private ObjectSet<challenge> _challenges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<contest> contests
        {
            get
            {
                if ((_contests == null))
                {
                    _contests = base.CreateObjectSet<contest>("contests");
                }
                return _contests;
            }
        }
        private ObjectSet<contest> _contests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<group_contests> group_contests
        {
            get
            {
                if ((_group_contests == null))
                {
                    _group_contests = base.CreateObjectSet<group_contests>("group_contests");
                }
                return _group_contests;
            }
        }
        private ObjectSet<group_contests> _group_contests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<group_hashtags> group_hashtags
        {
            get
            {
                if ((_group_hashtags == null))
                {
                    _group_hashtags = base.CreateObjectSet<group_hashtags>("group_hashtags");
                }
                return _group_hashtags;
            }
        }
        private ObjectSet<group_hashtags> _group_hashtags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<group_members> group_members
        {
            get
            {
                if ((_group_members == null))
                {
                    _group_members = base.CreateObjectSet<group_members>("group_members");
                }
                return _group_members;
            }
        }
        private ObjectSet<group_members> _group_members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<group> groups
        {
            get
            {
                if ((_groups == null))
                {
                    _groups = base.CreateObjectSet<group>("groups");
                }
                return _groups;
            }
        }
        private ObjectSet<group> _groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<message> messages
        {
            get
            {
                if ((_messages == null))
                {
                    _messages = base.CreateObjectSet<message>("messages");
                }
                return _messages;
            }
        }
        private ObjectSet<message> _messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<privacy_settings> privacy_settings
        {
            get
            {
                if ((_privacy_settings == null))
                {
                    _privacy_settings = base.CreateObjectSet<privacy_settings>("privacy_settings");
                }
                return _privacy_settings;
            }
        }
        private ObjectSet<privacy_settings> _privacy_settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<profile> profiles
        {
            get
            {
                if ((_profiles == null))
                {
                    _profiles = base.CreateObjectSet<profile>("profiles");
                }
                return _profiles;
            }
        }
        private ObjectSet<profile> _profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<statistic_info> statistic_info
        {
            get
            {
                if ((_statistic_info == null))
                {
                    _statistic_info = base.CreateObjectSet<statistic_info>("statistic_info");
                }
                return _statistic_info;
            }
        }
        private ObjectSet<statistic_info> _statistic_info;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<team_members> team_members
        {
            get
            {
                if ((_team_members == null))
                {
                    _team_members = base.CreateObjectSet<team_members>("team_members");
                }
                return _team_members;
            }
        }
        private ObjectSet<team_members> _team_members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<team> teams
        {
            get
            {
                if ((_teams == null))
                {
                    _teams = base.CreateObjectSet<team>("teams");
                }
                return _teams;
            }
        }
        private ObjectSet<team> _teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user_statistics> user_statistics
        {
            get
            {
                if ((_user_statistics == null))
                {
                    _user_statistics = base.CreateObjectSet<user_statistics>("user_statistics");
                }
                return _user_statistics;
            }
        }
        private ObjectSet<user_statistics> _user_statistics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the badge_level_info EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobadge_level_info(badge_level_info badge_level_info)
        {
            base.AddObject("badge_level_info", badge_level_info);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the badges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobadges(badge badge)
        {
            base.AddObject("badges", badge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the challenge_definitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochallenge_definitions(challenge_definitions challenge_definitions)
        {
            base.AddObject("challenge_definitions", challenge_definitions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the challenge_initial_values EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochallenge_initial_values(challenge_initial_values challenge_initial_values)
        {
            base.AddObject("challenge_initial_values", challenge_initial_values);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the challenges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTochallenges(challenge challenge)
        {
            base.AddObject("challenges", challenge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the contests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocontests(contest contest)
        {
            base.AddObject("contests", contest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the group_contests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogroup_contests(group_contests group_contests)
        {
            base.AddObject("group_contests", group_contests);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the group_hashtags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogroup_hashtags(group_hashtags group_hashtags)
        {
            base.AddObject("group_hashtags", group_hashtags);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the group_members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogroup_members(group_members group_members)
        {
            base.AddObject("group_members", group_members);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogroups(group group)
        {
            base.AddObject("groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomessages(message message)
        {
            base.AddObject("messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the privacy_settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprivacy_settings(privacy_settings privacy_settings)
        {
            base.AddObject("privacy_settings", privacy_settings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprofiles(profile profile)
        {
            base.AddObject("profiles", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the statistic_info EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostatistic_info(statistic_info statistic_info)
        {
            base.AddObject("statistic_info", statistic_info);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the team_members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToteam_members(team_members team_members)
        {
            base.AddObject("team_members", team_members);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToteams(team team)
        {
            base.AddObject("teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user_statistics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser_statistics(user_statistics user_statistics)
        {
            base.AddObject("user_statistics", user_statistics);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="badge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class badge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new badge object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="statistic">Initial value of the statistic property.</param>
        /// <param name="badge_level">Initial value of the badge_level property.</param>
        /// <param name="progress">Initial value of the progress property.</param>
        public static badge Createbadge(global::System.Int32 id, global::System.Int32 user_id, global::System.Byte statistic, global::System.Byte badge_level, global::System.Byte progress)
        {
            badge badge = new badge();
            badge.id = id;
            badge.user_id = user_id;
            badge.statistic = statistic;
            badge.badge_level = badge_level;
            badge.progress = progress;
            return badge;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte statistic
        {
            get
            {
                return _statistic;
            }
            set
            {
                OnstatisticChanging(value);
                ReportPropertyChanging("statistic");
                _statistic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statistic");
                OnstatisticChanged();
            }
        }
        private global::System.Byte _statistic;
        partial void OnstatisticChanging(global::System.Byte value);
        partial void OnstatisticChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte badge_level
        {
            get
            {
                return _badge_level;
            }
            set
            {
                Onbadge_levelChanging(value);
                ReportPropertyChanging("badge_level");
                _badge_level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("badge_level");
                Onbadge_levelChanged();
            }
        }
        private global::System.Byte _badge_level;
        partial void Onbadge_levelChanging(global::System.Byte value);
        partial void Onbadge_levelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte progress
        {
            get
            {
                return _progress;
            }
            set
            {
                OnprogressChanging(value);
                ReportPropertyChanging("progress");
                _progress = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("progress");
                OnprogressChanged();
            }
        }
        private global::System.Byte _progress;
        partial void OnprogressChanging(global::System.Byte value);
        partial void OnprogressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_badges_user_id", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_badges_user_id", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_badges_user_id", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_badges_user_id", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("UserModel.FK_badges_user_id", "users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="badge_level_info")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class badge_level_info : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new badge_level_info object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="statistic">Initial value of the statistic property.</param>
        /// <param name="level">Initial value of the level property.</param>
        /// <param name="requirement">Initial value of the requirement property.</param>
        /// <param name="reward">Initial value of the reward property.</param>
        /// <param name="image_path">Initial value of the image_path property.</param>
        public static badge_level_info Createbadge_level_info(global::System.Int32 id, global::System.Byte statistic, global::System.Byte level, global::System.Double requirement, global::System.Int32 reward, global::System.String image_path)
        {
            badge_level_info badge_level_info = new badge_level_info();
            badge_level_info.id = id;
            badge_level_info.statistic = statistic;
            badge_level_info.level = level;
            badge_level_info.requirement = requirement;
            badge_level_info.reward = reward;
            badge_level_info.image_path = image_path;
            return badge_level_info;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte statistic
        {
            get
            {
                return _statistic;
            }
            set
            {
                OnstatisticChanging(value);
                ReportPropertyChanging("statistic");
                _statistic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statistic");
                OnstatisticChanged();
            }
        }
        private global::System.Byte _statistic;
        partial void OnstatisticChanging(global::System.Byte value);
        partial void OnstatisticChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte level
        {
            get
            {
                return _level;
            }
            set
            {
                OnlevelChanging(value);
                ReportPropertyChanging("level");
                _level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("level");
                OnlevelChanged();
            }
        }
        private global::System.Byte _level;
        partial void OnlevelChanging(global::System.Byte value);
        partial void OnlevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double requirement
        {
            get
            {
                return _requirement;
            }
            set
            {
                OnrequirementChanging(value);
                ReportPropertyChanging("requirement");
                _requirement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("requirement");
                OnrequirementChanged();
            }
        }
        private global::System.Double _requirement;
        partial void OnrequirementChanging(global::System.Double value);
        partial void OnrequirementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 reward
        {
            get
            {
                return _reward;
            }
            set
            {
                OnrewardChanging(value);
                ReportPropertyChanging("reward");
                _reward = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("reward");
                OnrewardChanged();
            }
        }
        private global::System.Int32 _reward;
        partial void OnrewardChanging(global::System.Int32 value);
        partial void OnrewardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String image_path
        {
            get
            {
                return _image_path;
            }
            set
            {
                Onimage_pathChanging(value);
                ReportPropertyChanging("image_path");
                _image_path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("image_path");
                Onimage_pathChanged();
            }
        }
        private global::System.String _image_path;
        partial void Onimage_pathChanging(global::System.String value);
        partial void Onimage_pathChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="challenge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class challenge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new challenge object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="points">Initial value of the points property.</param>
        /// <param name="requirement">Initial value of the requirement property.</param>
        /// <param name="persistent">Initial value of the persistent property.</param>
        /// <param name="end_time">Initial value of the end_time property.</param>
        /// <param name="duration_days">Initial value of the duration_days property.</param>
        /// <param name="statistic">Initial value of the statistic property.</param>
        /// <param name="active">Initial value of the active property.</param>
        public static challenge Createchallenge(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Int32 points, global::System.Double requirement, global::System.Boolean persistent, global::System.DateTime end_time, global::System.Int32 duration_days, global::System.Byte statistic, global::System.Boolean active)
        {
            challenge challenge = new challenge();
            challenge.id = id;
            challenge.name = name;
            challenge.description = description;
            challenge.points = points;
            challenge.requirement = requirement;
            challenge.persistent = persistent;
            challenge.end_time = end_time;
            challenge.duration_days = duration_days;
            challenge.statistic = statistic;
            challenge.active = active;
            return challenge;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 points
        {
            get
            {
                return _points;
            }
            set
            {
                OnpointsChanging(value);
                ReportPropertyChanging("points");
                _points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("points");
                OnpointsChanged();
            }
        }
        private global::System.Int32 _points;
        partial void OnpointsChanging(global::System.Int32 value);
        partial void OnpointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double requirement
        {
            get
            {
                return _requirement;
            }
            set
            {
                OnrequirementChanging(value);
                ReportPropertyChanging("requirement");
                _requirement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("requirement");
                OnrequirementChanged();
            }
        }
        private global::System.Double _requirement;
        partial void OnrequirementChanging(global::System.Double value);
        partial void OnrequirementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean persistent
        {
            get
            {
                return _persistent;
            }
            set
            {
                OnpersistentChanging(value);
                ReportPropertyChanging("persistent");
                _persistent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("persistent");
                OnpersistentChanged();
            }
        }
        private global::System.Boolean _persistent;
        partial void OnpersistentChanging(global::System.Boolean value);
        partial void OnpersistentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime end_time
        {
            get
            {
                return _end_time;
            }
            set
            {
                Onend_timeChanging(value);
                ReportPropertyChanging("end_time");
                _end_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("end_time");
                Onend_timeChanged();
            }
        }
        private global::System.DateTime _end_time;
        partial void Onend_timeChanging(global::System.DateTime value);
        partial void Onend_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 duration_days
        {
            get
            {
                return _duration_days;
            }
            set
            {
                Onduration_daysChanging(value);
                ReportPropertyChanging("duration_days");
                _duration_days = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("duration_days");
                Onduration_daysChanged();
            }
        }
        private global::System.Int32 _duration_days;
        partial void Onduration_daysChanging(global::System.Int32 value);
        partial void Onduration_daysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte statistic
        {
            get
            {
                return _statistic;
            }
            set
            {
                OnstatisticChanging(value);
                ReportPropertyChanging("statistic");
                _statistic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statistic");
                OnstatisticChanged();
            }
        }
        private global::System.Byte _statistic;
        partial void OnstatisticChanging(global::System.Byte value);
        partial void OnstatisticChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_challenge_initial_values_challenge_id", "challenge_initial_values")]
        public EntityCollection<challenge_initial_values> challenge_initial_values
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<challenge_initial_values>("UserModel.FK_challenge_initial_values_challenge_id", "challenge_initial_values");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<challenge_initial_values>("UserModel.FK_challenge_initial_values_challenge_id", "challenge_initial_values", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="challenge_definitions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class challenge_definitions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new challenge_definitions object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="challenge_type">Initial value of the challenge_type property.</param>
        /// <param name="persistent">Initial value of the persistent property.</param>
        /// <param name="statistic">Initial value of the statistic property.</param>
        /// <param name="requirement">Initial value of the requirement property.</param>
        /// <param name="reward">Initial value of the reward property.</param>
        /// <param name="condition_text">Initial value of the condition_text property.</param>
        public static challenge_definitions Createchallenge_definitions(global::System.Int32 id, global::System.Byte challenge_type, global::System.Boolean persistent, global::System.Byte statistic, global::System.Double requirement, global::System.Int32 reward, global::System.String condition_text)
        {
            challenge_definitions challenge_definitions = new challenge_definitions();
            challenge_definitions.id = id;
            challenge_definitions.challenge_type = challenge_type;
            challenge_definitions.persistent = persistent;
            challenge_definitions.statistic = statistic;
            challenge_definitions.requirement = requirement;
            challenge_definitions.reward = reward;
            challenge_definitions.condition_text = condition_text;
            return challenge_definitions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte challenge_type
        {
            get
            {
                return _challenge_type;
            }
            set
            {
                Onchallenge_typeChanging(value);
                ReportPropertyChanging("challenge_type");
                _challenge_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("challenge_type");
                Onchallenge_typeChanged();
            }
        }
        private global::System.Byte _challenge_type;
        partial void Onchallenge_typeChanging(global::System.Byte value);
        partial void Onchallenge_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean persistent
        {
            get
            {
                return _persistent;
            }
            set
            {
                OnpersistentChanging(value);
                ReportPropertyChanging("persistent");
                _persistent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("persistent");
                OnpersistentChanged();
            }
        }
        private global::System.Boolean _persistent;
        partial void OnpersistentChanging(global::System.Boolean value);
        partial void OnpersistentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte statistic
        {
            get
            {
                return _statistic;
            }
            set
            {
                OnstatisticChanging(value);
                ReportPropertyChanging("statistic");
                _statistic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statistic");
                OnstatisticChanged();
            }
        }
        private global::System.Byte _statistic;
        partial void OnstatisticChanging(global::System.Byte value);
        partial void OnstatisticChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double requirement
        {
            get
            {
                return _requirement;
            }
            set
            {
                OnrequirementChanging(value);
                ReportPropertyChanging("requirement");
                _requirement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("requirement");
                OnrequirementChanged();
            }
        }
        private global::System.Double _requirement;
        partial void OnrequirementChanging(global::System.Double value);
        partial void OnrequirementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 reward
        {
            get
            {
                return _reward;
            }
            set
            {
                OnrewardChanging(value);
                ReportPropertyChanging("reward");
                _reward = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("reward");
                OnrewardChanged();
            }
        }
        private global::System.Int32 _reward;
        partial void OnrewardChanging(global::System.Int32 value);
        partial void OnrewardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String condition_text
        {
            get
            {
                return _condition_text;
            }
            set
            {
                Oncondition_textChanging(value);
                ReportPropertyChanging("condition_text");
                _condition_text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("condition_text");
                Oncondition_textChanged();
            }
        }
        private global::System.String _condition_text;
        partial void Oncondition_textChanging(global::System.String value);
        partial void Oncondition_textChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="challenge_initial_values")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class challenge_initial_values : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new challenge_initial_values object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="challenge_id">Initial value of the challenge_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="value">Initial value of the value property.</param>
        public static challenge_initial_values Createchallenge_initial_values(global::System.Int32 id, global::System.Int32 challenge_id, global::System.Int32 user_id, global::System.Double value)
        {
            challenge_initial_values challenge_initial_values = new challenge_initial_values();
            challenge_initial_values.id = id;
            challenge_initial_values.challenge_id = challenge_id;
            challenge_initial_values.user_id = user_id;
            challenge_initial_values.value = value;
            return challenge_initial_values;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 challenge_id
        {
            get
            {
                return _challenge_id;
            }
            set
            {
                Onchallenge_idChanging(value);
                ReportPropertyChanging("challenge_id");
                _challenge_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("challenge_id");
                Onchallenge_idChanged();
            }
        }
        private global::System.Int32 _challenge_id;
        partial void Onchallenge_idChanging(global::System.Int32 value);
        partial void Onchallenge_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Double _value;
        partial void OnvalueChanging(global::System.Double value);
        partial void OnvalueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_challenge_initial_values_challenge_id", "challenges")]
        public challenge challenge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<challenge>("UserModel.FK_challenge_initial_values_challenge_id", "challenges").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<challenge>("UserModel.FK_challenge_initial_values_challenge_id", "challenges").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<challenge> challengeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<challenge>("UserModel.FK_challenge_initial_values_challenge_id", "challenges");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<challenge>("UserModel.FK_challenge_initial_values_challenge_id", "challenges", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_challenge_initial_values_user_id", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_challenge_initial_values_user_id", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_challenge_initial_values_user_id", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_challenge_initial_values_user_id", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("UserModel.FK_challenge_initial_values_user_id", "users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="contest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class contest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new contest object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="points">Initial value of the points property.</param>
        /// <param name="end_mode">Initial value of the end_mode property.</param>
        /// <param name="start">Initial value of the start property.</param>
        /// <param name="statistic">Initial value of the statistic property.</param>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="searchable">Initial value of the searchable property.</param>
        /// <param name="active">Initial value of the active property.</param>
        /// <param name="creator_id">Initial value of the creator_id property.</param>
        public static contest Createcontest(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Int32 points, global::System.Byte end_mode, global::System.DateTime start, global::System.Byte statistic, global::System.Byte type, global::System.Boolean searchable, global::System.Boolean active, global::System.Int32 creator_id)
        {
            contest contest = new contest();
            contest.id = id;
            contest.name = name;
            contest.description = description;
            contest.points = points;
            contest.end_mode = end_mode;
            contest.start = start;
            contest.statistic = statistic;
            contest.type = type;
            contest.searchable = searchable;
            contest.active = active;
            contest.creator_id = creator_id;
            return contest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 points
        {
            get
            {
                return _points;
            }
            set
            {
                OnpointsChanging(value);
                ReportPropertyChanging("points");
                _points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("points");
                OnpointsChanged();
            }
        }
        private global::System.Int32 _points;
        partial void OnpointsChanging(global::System.Int32 value);
        partial void OnpointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte end_mode
        {
            get
            {
                return _end_mode;
            }
            set
            {
                Onend_modeChanging(value);
                ReportPropertyChanging("end_mode");
                _end_mode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("end_mode");
                Onend_modeChanged();
            }
        }
        private global::System.Byte _end_mode;
        partial void Onend_modeChanging(global::System.Byte value);
        partial void Onend_modeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> end_time
        {
            get
            {
                return _end_time;
            }
            set
            {
                Onend_timeChanging(value);
                ReportPropertyChanging("end_time");
                _end_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("end_time");
                Onend_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _end_time;
        partial void Onend_timeChanging(Nullable<global::System.DateTime> value);
        partial void Onend_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> end_goal
        {
            get
            {
                return _end_goal;
            }
            set
            {
                Onend_goalChanging(value);
                ReportPropertyChanging("end_goal");
                _end_goal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("end_goal");
                Onend_goalChanged();
            }
        }
        private Nullable<global::System.Double> _end_goal;
        partial void Onend_goalChanging(Nullable<global::System.Double> value);
        partial void Onend_goalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime start
        {
            get
            {
                return _start;
            }
            set
            {
                OnstartChanging(value);
                ReportPropertyChanging("start");
                _start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("start");
                OnstartChanged();
            }
        }
        private global::System.DateTime _start;
        partial void OnstartChanging(global::System.DateTime value);
        partial void OnstartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte statistic
        {
            get
            {
                return _statistic;
            }
            set
            {
                OnstatisticChanging(value);
                ReportPropertyChanging("statistic");
                _statistic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statistic");
                OnstatisticChanged();
            }
        }
        private global::System.Byte _statistic;
        partial void OnstatisticChanging(global::System.Byte value);
        partial void OnstatisticChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.Byte _type;
        partial void OntypeChanging(global::System.Byte value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean searchable
        {
            get
            {
                return _searchable;
            }
            set
            {
                OnsearchableChanging(value);
                ReportPropertyChanging("searchable");
                _searchable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("searchable");
                OnsearchableChanged();
            }
        }
        private global::System.Boolean _searchable;
        partial void OnsearchableChanging(global::System.Boolean value);
        partial void OnsearchableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private global::System.Boolean _active;
        partial void OnactiveChanging(global::System.Boolean value);
        partial void OnactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> deactivated
        {
            get
            {
                return _deactivated;
            }
            set
            {
                OndeactivatedChanging(value);
                ReportPropertyChanging("deactivated");
                _deactivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deactivated");
                OndeactivatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _deactivated;
        partial void OndeactivatedChanging(Nullable<global::System.DateTime> value);
        partial void OndeactivatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 creator_id
        {
            get
            {
                return _creator_id;
            }
            set
            {
                Oncreator_idChanging(value);
                ReportPropertyChanging("creator_id");
                _creator_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("creator_id");
                Oncreator_idChanged();
            }
        }
        private global::System.Int32 _creator_id;
        partial void Oncreator_idChanging(global::System.Int32 value);
        partial void Oncreator_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_contest_id_group_contests", "group_contests")]
        public EntityCollection<group_contests> group_contests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<group_contests>("UserModel.FK_contest_id_group_contests", "group_contests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<group_contests>("UserModel.FK_contest_id_group_contests", "group_contests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_contests_creator_id", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_contests_creator_id", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_contests_creator_id", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_contests_creator_id", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("UserModel.FK_contests_creator_id", "users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new group object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static group Creategroup(global::System.Int32 id, global::System.String name)
        {
            group group = new group();
            group.id = id;
            group.name = name;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_group_id_group_contests", "group_contests")]
        public EntityCollection<group_contests> group_contests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<group_contests>("UserModel.FK_group_id_group_contests", "group_contests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<group_contests>("UserModel.FK_group_id_group_contests", "group_contests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_group_id_group_hashtags", "group_hashtags")]
        public EntityCollection<group_hashtags> group_hashtags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<group_hashtags>("UserModel.FK_group_id_group_hashtags", "group_hashtags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<group_hashtags>("UserModel.FK_group_id_group_hashtags", "group_hashtags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_group_id", "group_members")]
        public EntityCollection<group_members> group_members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<group_members>("UserModel.fk_group_id", "group_members");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<group_members>("UserModel.fk_group_id", "group_members", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_group_id_messages", "messages")]
        public EntityCollection<message> messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<message>("UserModel.FK_group_id_messages", "messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<message>("UserModel.FK_group_id_messages", "messages", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="group_contests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class group_contests : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new group_contests object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="contest_id">Initial value of the contest_id property.</param>
        /// <param name="group_id">Initial value of the group_id property.</param>
        public static group_contests Creategroup_contests(global::System.Int32 id, global::System.Int32 contest_id, global::System.Int32 group_id)
        {
            group_contests group_contests = new group_contests();
            group_contests.id = id;
            group_contests.contest_id = contest_id;
            group_contests.group_id = group_id;
            return group_contests;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 contest_id
        {
            get
            {
                return _contest_id;
            }
            set
            {
                Oncontest_idChanging(value);
                ReportPropertyChanging("contest_id");
                _contest_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("contest_id");
                Oncontest_idChanged();
            }
        }
        private global::System.Int32 _contest_id;
        partial void Oncontest_idChanging(global::System.Int32 value);
        partial void Oncontest_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 group_id
        {
            get
            {
                return _group_id;
            }
            set
            {
                Ongroup_idChanging(value);
                ReportPropertyChanging("group_id");
                _group_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("group_id");
                Ongroup_idChanged();
            }
        }
        private global::System.Int32 _group_id;
        partial void Ongroup_idChanging(global::System.Int32 value);
        partial void Ongroup_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_contest_id_group_contests", "contests")]
        public contest contest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<contest>("UserModel.FK_contest_id_group_contests", "contests").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<contest>("UserModel.FK_contest_id_group_contests", "contests").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<contest> contestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<contest>("UserModel.FK_contest_id_group_contests", "contests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<contest>("UserModel.FK_contest_id_group_contests", "contests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_group_id_group_contests", "groups")]
        public group group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.FK_group_id_group_contests", "groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.FK_group_id_group_contests", "groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<group> groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.FK_group_id_group_contests", "groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<group>("UserModel.FK_group_id_group_contests", "groups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="group_hashtags")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class group_hashtags : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new group_hashtags object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="group_id">Initial value of the group_id property.</param>
        /// <param name="hashtag">Initial value of the hashtag property.</param>
        public static group_hashtags Creategroup_hashtags(global::System.Int32 id, global::System.Int32 group_id, global::System.String hashtag)
        {
            group_hashtags group_hashtags = new group_hashtags();
            group_hashtags.id = id;
            group_hashtags.group_id = group_id;
            group_hashtags.hashtag = hashtag;
            return group_hashtags;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 group_id
        {
            get
            {
                return _group_id;
            }
            set
            {
                Ongroup_idChanging(value);
                ReportPropertyChanging("group_id");
                _group_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("group_id");
                Ongroup_idChanged();
            }
        }
        private global::System.Int32 _group_id;
        partial void Ongroup_idChanging(global::System.Int32 value);
        partial void Ongroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String hashtag
        {
            get
            {
                return _hashtag;
            }
            set
            {
                OnhashtagChanging(value);
                ReportPropertyChanging("hashtag");
                _hashtag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("hashtag");
                OnhashtagChanged();
            }
        }
        private global::System.String _hashtag;
        partial void OnhashtagChanging(global::System.String value);
        partial void OnhashtagChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_group_id_group_hashtags", "groups")]
        public group group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.FK_group_id_group_hashtags", "groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.FK_group_id_group_hashtags", "groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<group> groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.FK_group_id_group_hashtags", "groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<group>("UserModel.FK_group_id_group_hashtags", "groups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="group_members")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class group_members : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new group_members object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="group_id">Initial value of the group_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static group_members Creategroup_members(global::System.Int32 id, global::System.Int32 group_id, global::System.Int32 user_id)
        {
            group_members group_members = new group_members();
            group_members.id = id;
            group_members.group_id = group_id;
            group_members.user_id = user_id;
            return group_members;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 group_id
        {
            get
            {
                return _group_id;
            }
            set
            {
                Ongroup_idChanging(value);
                ReportPropertyChanging("group_id");
                _group_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("group_id");
                Ongroup_idChanged();
            }
        }
        private global::System.Int32 _group_id;
        partial void Ongroup_idChanging(global::System.Int32 value);
        partial void Ongroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_group_id", "groups")]
        public group group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.fk_group_id", "groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.fk_group_id", "groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<group> groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.fk_group_id", "groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<group>("UserModel.fk_group_id", "groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_user_id_groups", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.fk_user_id_groups", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.fk_user_id_groups", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.fk_user_id_groups", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("UserModel.fk_user_id_groups", "users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new message object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="group_id">Initial value of the group_id property.</param>
        /// <param name="poster_id">Initial value of the poster_id property.</param>
        /// <param name="title">Initial value of the title property.</param>
        /// <param name="message1">Initial value of the message1 property.</param>
        public static message Createmessage(global::System.Int32 id, global::System.Int32 group_id, global::System.Int32 poster_id, global::System.String title, global::System.String message1)
        {
            message message = new message();
            message.id = id;
            message.group_id = group_id;
            message.poster_id = poster_id;
            message.title = title;
            message.message1 = message1;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 group_id
        {
            get
            {
                return _group_id;
            }
            set
            {
                Ongroup_idChanging(value);
                ReportPropertyChanging("group_id");
                _group_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("group_id");
                Ongroup_idChanged();
            }
        }
        private global::System.Int32 _group_id;
        partial void Ongroup_idChanging(global::System.Int32 value);
        partial void Ongroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 poster_id
        {
            get
            {
                return _poster_id;
            }
            set
            {
                Onposter_idChanging(value);
                ReportPropertyChanging("poster_id");
                _poster_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("poster_id");
                Onposter_idChanged();
            }
        }
        private global::System.Int32 _poster_id;
        partial void Onposter_idChanging(global::System.Int32 value);
        partial void Onposter_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String message1
        {
            get
            {
                return _message1;
            }
            set
            {
                Onmessage1Changing(value);
                ReportPropertyChanging("message1");
                _message1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("message1");
                Onmessage1Changed();
            }
        }
        private global::System.String _message1;
        partial void Onmessage1Changing(global::System.String value);
        partial void Onmessage1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> add_green_score
        {
            get
            {
                return _add_green_score;
            }
            set
            {
                Onadd_green_scoreChanging(value);
                ReportPropertyChanging("add_green_score");
                _add_green_score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("add_green_score");
                Onadd_green_scoreChanged();
            }
        }
        private Nullable<global::System.Int32> _add_green_score;
        partial void Onadd_green_scoreChanging(Nullable<global::System.Int32> value);
        partial void Onadd_green_scoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> add_competition_score
        {
            get
            {
                return _add_competition_score;
            }
            set
            {
                Onadd_competition_scoreChanging(value);
                ReportPropertyChanging("add_competition_score");
                _add_competition_score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("add_competition_score");
                Onadd_competition_scoreChanged();
            }
        }
        private Nullable<global::System.Int32> _add_competition_score;
        partial void Onadd_competition_scoreChanging(Nullable<global::System.Int32> value);
        partial void Onadd_competition_scoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> add_challenge_score
        {
            get
            {
                return _add_challenge_score;
            }
            set
            {
                Onadd_challenge_scoreChanging(value);
                ReportPropertyChanging("add_challenge_score");
                _add_challenge_score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("add_challenge_score");
                Onadd_challenge_scoreChanged();
            }
        }
        private Nullable<global::System.Int32> _add_challenge_score;
        partial void Onadd_challenge_scoreChanging(Nullable<global::System.Int32> value);
        partial void Onadd_challenge_scoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> add_badge_score
        {
            get
            {
                return _add_badge_score;
            }
            set
            {
                Onadd_badge_scoreChanging(value);
                ReportPropertyChanging("add_badge_score");
                _add_badge_score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("add_badge_score");
                Onadd_badge_scoreChanged();
            }
        }
        private Nullable<global::System.Int32> _add_badge_score;
        partial void Onadd_badge_scoreChanging(Nullable<global::System.Int32> value);
        partial void Onadd_badge_scoreChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_group_id_messages", "groups")]
        public group group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.FK_group_id_messages", "groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.FK_group_id_messages", "groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<group> groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<group>("UserModel.FK_group_id_messages", "groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<group>("UserModel.FK_group_id_messages", "groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_poster_id_messages", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_poster_id_messages", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_poster_id_messages", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_poster_id_messages", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("UserModel.FK_poster_id_messages", "users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="privacy_settings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class privacy_settings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new privacy_settings object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="profile_visibility">Initial value of the profile_visibility property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="gender">Initial value of the gender property.</param>
        /// <param name="age">Initial value of the age property.</param>
        /// <param name="weight">Initial value of the weight property.</param>
        /// <param name="height">Initial value of the height property.</param>
        /// <param name="groups">Initial value of the groups property.</param>
        public static privacy_settings Createprivacy_settings(global::System.Int32 id, global::System.Int32 user_id, global::System.Byte profile_visibility, global::System.Boolean email, global::System.Boolean gender, global::System.Boolean age, global::System.Boolean weight, global::System.Boolean height, global::System.Boolean groups)
        {
            privacy_settings privacy_settings = new privacy_settings();
            privacy_settings.id = id;
            privacy_settings.user_id = user_id;
            privacy_settings.profile_visibility = profile_visibility;
            privacy_settings.email = email;
            privacy_settings.gender = gender;
            privacy_settings.age = age;
            privacy_settings.weight = weight;
            privacy_settings.height = height;
            privacy_settings.groups = groups;
            return privacy_settings;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte profile_visibility
        {
            get
            {
                return _profile_visibility;
            }
            set
            {
                Onprofile_visibilityChanging(value);
                ReportPropertyChanging("profile_visibility");
                _profile_visibility = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("profile_visibility");
                Onprofile_visibilityChanged();
            }
        }
        private global::System.Byte _profile_visibility;
        partial void Onprofile_visibilityChanging(global::System.Byte value);
        partial void Onprofile_visibilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.Boolean _email;
        partial void OnemailChanging(global::System.Boolean value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.Boolean _gender;
        partial void OngenderChanging(global::System.Boolean value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean age
        {
            get
            {
                return _age;
            }
            set
            {
                OnageChanging(value);
                ReportPropertyChanging("age");
                _age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("age");
                OnageChanged();
            }
        }
        private global::System.Boolean _age;
        partial void OnageChanging(global::System.Boolean value);
        partial void OnageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private global::System.Boolean _weight;
        partial void OnweightChanging(global::System.Boolean value);
        partial void OnweightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean height
        {
            get
            {
                return _height;
            }
            set
            {
                OnheightChanging(value);
                ReportPropertyChanging("height");
                _height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("height");
                OnheightChanged();
            }
        }
        private global::System.Boolean _height;
        partial void OnheightChanging(global::System.Boolean value);
        partial void OnheightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean groups
        {
            get
            {
                return _groups;
            }
            set
            {
                OngroupsChanging(value);
                ReportPropertyChanging("groups");
                _groups = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("groups");
                OngroupsChanged();
            }
        }
        private global::System.Boolean _groups;
        partial void OngroupsChanging(global::System.Boolean value);
        partial void OngroupsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new profile object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="gender">Initial value of the gender property.</param>
        public static profile Createprofile(global::System.Int32 id, global::System.Int32 user_id, global::System.String first_name, global::System.String last_name, global::System.String email, global::System.String gender)
        {
            profile profile = new profile();
            profile.id = id;
            profile.user_id = user_id;
            profile.first_name = first_name;
            profile.last_name = last_name;
            profile.email = email;
            profile.gender = gender;
            return profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.String _state;
        partial void OnstateChanging(global::System.String value);
        partial void OnstateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> age
        {
            get
            {
                return _age;
            }
            set
            {
                OnageChanging(value);
                ReportPropertyChanging("age");
                _age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("age");
                OnageChanged();
            }
        }
        private Nullable<global::System.Int32> _age;
        partial void OnageChanging(Nullable<global::System.Int32> value);
        partial void OnageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> height
        {
            get
            {
                return _height;
            }
            set
            {
                OnheightChanging(value);
                ReportPropertyChanging("height");
                _height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("height");
                OnheightChanged();
            }
        }
        private Nullable<global::System.Int32> _height;
        partial void OnheightChanging(Nullable<global::System.Int32> value);
        partial void OnheightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private Nullable<global::System.Int32> _weight;
        partial void OnweightChanging(Nullable<global::System.Int32> value);
        partial void OnweightChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK__profile__state__0CBAE877", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK__profile__state__0CBAE877", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK__profile__state__0CBAE877", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK__profile__state__0CBAE877", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("UserModel.FK__profile__state__0CBAE877", "users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="statistic_info")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class statistic_info : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new statistic_info object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="statistic_id">Initial value of the statistic_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="format_string">Initial value of the format_string property.</param>
        public static statistic_info Createstatistic_info(global::System.Int32 id, global::System.Byte statistic_id, global::System.String name, global::System.String format_string)
        {
            statistic_info statistic_info = new statistic_info();
            statistic_info.id = id;
            statistic_info.statistic_id = statistic_id;
            statistic_info.name = name;
            statistic_info.format_string = format_string;
            return statistic_info;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte statistic_id
        {
            get
            {
                return _statistic_id;
            }
            set
            {
                Onstatistic_idChanging(value);
                ReportPropertyChanging("statistic_id");
                _statistic_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statistic_id");
                Onstatistic_idChanged();
            }
        }
        private global::System.Byte _statistic_id;
        partial void Onstatistic_idChanging(global::System.Byte value);
        partial void Onstatistic_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String format_string
        {
            get
            {
                return _format_string;
            }
            set
            {
                Onformat_stringChanging(value);
                ReportPropertyChanging("format_string");
                _format_string = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("format_string");
                Onformat_stringChanged();
            }
        }
        private global::System.String _format_string;
        partial void Onformat_stringChanging(global::System.String value);
        partial void Onformat_stringChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new team object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static team Createteam(global::System.Int32 id, global::System.String name)
        {
            team team = new team();
            team.id = id;
            team.name = name;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_team_id", "team_members")]
        public EntityCollection<team_members> team_members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<team_members>("UserModel.fk_team_id", "team_members");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<team_members>("UserModel.fk_team_id", "team_members", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_team_members_team_id", "team_members")]
        public EntityCollection<team_members> team_members1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<team_members>("UserModel.FK_team_members_team_id", "team_members");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<team_members>("UserModel.FK_team_members_team_id", "team_members", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="team_members")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class team_members : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new team_members object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="team_id">Initial value of the team_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        public static team_members Createteam_members(global::System.Int32 id, global::System.Int32 team_id, global::System.Int32 user_id)
        {
            team_members team_members = new team_members();
            team_members.id = id;
            team_members.team_id = team_id;
            team_members.user_id = user_id;
            return team_members;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 team_id
        {
            get
            {
                return _team_id;
            }
            set
            {
                Onteam_idChanging(value);
                ReportPropertyChanging("team_id");
                _team_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("team_id");
                Onteam_idChanged();
            }
        }
        private global::System.Int32 _team_id;
        partial void Onteam_idChanging(global::System.Int32 value);
        partial void Onteam_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_team_id", "teams")]
        public team team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<team>("UserModel.fk_team_id", "teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<team>("UserModel.fk_team_id", "teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<team> teamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<team>("UserModel.fk_team_id", "teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<team>("UserModel.fk_team_id", "teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_team_members_team_id", "teams")]
        public team team1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<team>("UserModel.FK_team_members_team_id", "teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<team>("UserModel.FK_team_members_team_id", "teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<team> team1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<team>("UserModel.FK_team_members_team_id", "teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<team>("UserModel.FK_team_members_team_id", "teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_team_members_user_id", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.fk_team_members_user_id", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.fk_team_members_user_id", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.fk_team_members_user_id", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("UserModel.fk_team_members_user_id", "users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_user_id_teams", "users")]
        public user user1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.fk_user_id_teams", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.fk_user_id_teams", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> user1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.fk_user_id_teams", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("UserModel.fk_user_id_teams", "users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="user_name">Initial value of the user_name property.</param>
        /// <param name="password">Initial value of the password property.</param>
        public static user Createuser(global::System.Int32 id, global::System.String user_name, global::System.String password)
        {
            user user = new user();
            user.id = id;
            user.user_name = user_name;
            user.password = password;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String user_name
        {
            get
            {
                return _user_name;
            }
            set
            {
                Onuser_nameChanging(value);
                ReportPropertyChanging("user_name");
                _user_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("user_name");
                Onuser_nameChanged();
            }
        }
        private global::System.String _user_name;
        partial void Onuser_nameChanging(global::System.String value);
        partial void Onuser_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_badges_user_id", "badges")]
        public EntityCollection<badge> badges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<badge>("UserModel.FK_badges_user_id", "badges");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<badge>("UserModel.FK_badges_user_id", "badges", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_challenge_initial_values_user_id", "challenge_initial_values")]
        public EntityCollection<challenge_initial_values> challenge_initial_values
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<challenge_initial_values>("UserModel.FK_challenge_initial_values_user_id", "challenge_initial_values");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<challenge_initial_values>("UserModel.FK_challenge_initial_values_user_id", "challenge_initial_values", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_contests_creator_id", "contests")]
        public EntityCollection<contest> contests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<contest>("UserModel.FK_contests_creator_id", "contests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<contest>("UserModel.FK_contests_creator_id", "contests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_user_id_groups", "group_members")]
        public EntityCollection<group_members> group_members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<group_members>("UserModel.fk_user_id_groups", "group_members");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<group_members>("UserModel.fk_user_id_groups", "group_members", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_poster_id_messages", "messages")]
        public EntityCollection<message> messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<message>("UserModel.FK_poster_id_messages", "messages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<message>("UserModel.FK_poster_id_messages", "messages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK__profile__state__0CBAE877", "profile")]
        public EntityCollection<profile> profiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<profile>("UserModel.FK__profile__state__0CBAE877", "profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<profile>("UserModel.FK__profile__state__0CBAE877", "profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_team_members_user_id", "team_members")]
        public EntityCollection<team_members> team_members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<team_members>("UserModel.fk_team_members_user_id", "team_members");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<team_members>("UserModel.fk_team_members_user_id", "team_members", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "fk_user_id_teams", "team_members")]
        public EntityCollection<team_members> team_members1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<team_members>("UserModel.fk_user_id_teams", "team_members");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<team_members>("UserModel.fk_user_id_teams", "team_members", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_statistics_users", "user_statistics")]
        public EntityCollection<user_statistics> user_statistics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_statistics>("UserModel.FK_statistics_users", "user_statistics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_statistics>("UserModel.FK_statistics_users", "user_statistics", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="user_statistics")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user_statistics : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user_statistics object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="statistic_type">Initial value of the statistic_type property.</param>
        /// <param name="value">Initial value of the value property.</param>
        public static user_statistics Createuser_statistics(global::System.Int32 id, global::System.Int32 user_id, global::System.Byte statistic_type, global::System.Double value)
        {
            user_statistics user_statistics = new user_statistics();
            user_statistics.id = id;
            user_statistics.user_id = user_id;
            user_statistics.statistic_type = statistic_type;
            user_statistics.value = value;
            return user_statistics;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int32 _user_id;
        partial void Onuser_idChanging(global::System.Int32 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte statistic_type
        {
            get
            {
                return _statistic_type;
            }
            set
            {
                Onstatistic_typeChanging(value);
                ReportPropertyChanging("statistic_type");
                _statistic_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statistic_type");
                Onstatistic_typeChanged();
            }
        }
        private global::System.Byte _statistic_type;
        partial void Onstatistic_typeChanging(global::System.Byte value);
        partial void Onstatistic_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Double _value;
        partial void OnvalueChanging(global::System.Double value);
        partial void OnvalueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserModel", "FK_statistics_users", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_statistics_users", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_statistics_users", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("UserModel.FK_statistics_users", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("UserModel.FK_statistics_users", "users", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
